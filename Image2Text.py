# -*- coding: utf-8 -*-

#################################################
#            Crawler applied in CNKI            #
#                   Part    IV                  #
#                   IMG TO TXT                  #
#                    Oct 2018                   #
#            Cheng Xie Fudan University         #
#################################################

from aip import AipOcr
import re
import os
import pandas as pd

#	Designate app_id, api_key and secret_key for Baidu Cloud
app_id = '14465673'
api_key = 'Z4LGw4E0ta81M1WvhWAy8TyG'
secret_key = 'cDMldWV6XASQ9oauLXUc9LlhT9Sn6GR0'

#	Designate the directory of the image set
path_img = 'D:/pic2'

'''	Designate the directory of the text set. ATTENTION: the text set in which texts generated by this program are stored will be created automatically. 
Thus, you simply need to designate the path of the directory and MUSTN'T create it manually'''
path_txt = 'D:/jpg_txt/'

#	Designate the path of the table generated by Generate_TitleList.py
path_table = 'D:/out.csv'

#df = pd.DataFrame.from_csv(path_table)
df = pd.read_csv(path_table) 

#   Wash the dataframe
pattern = re.compile('[\*\\\/:\?"<>\|]')
df_outlier = df[df['title'].str.contains(pattern)]
for j in df_outlier.index.values:
    df.loc[j, 'title'] = re.sub(pattern, '', str(df.loc[j]['title']))

#	Create the directory of the text set
os.mkdir(path_txt)

pathdir = sorted(os.listdir(path_img))
client = AipOcr(app_id, api_key, secret_key)

#	Define the function transforming images into characters.
def get_str(file_name):
    file = open(file_name, 'rb')
    img = file.read()
    message = client.basicAccurate(img)
    if 'words_result' in message.keys():
        pass
    else:
	#	In case that basicAccurate fails
        message = client.basicGeneral(img)
    strs = ''
    for item in message['words_result']:
        strs += item['words']
    return strs

#	Define the function generating the name of txt
def get_FullTitle(title):
    df_small = df[df['title'] == title].reset_index()
    date = df_small['date']
    author = df_small['author']
    source = df_small['source']
    return date[0], author[0], source[0]

flag = 0
for k in range(62, len(pathdir)):
    if flag == 0:
        title = pathdir[k][0:len(pathdir[k]) - 7]
    if flag == 0:
        content = get_str(path_img + '/' + pathdir[k])
    else:
        content += '\n' + get_str(path_img + '/' + pathdir[k])
    if pathdir[k + 1][0:len(pathdir[k]) - 7] == title:
        flag = 1
    else:
        flag = 0
        full_title = get_FullTitle(title)
        file_name = full_title[0] + '_' + title + '_' + full_title[1] + '_' + full_title[2]
        f = open(path_txt + file_name + '.txt', 'w')
        f.write(content)
        f.close()
        print(title + ' is OK')
